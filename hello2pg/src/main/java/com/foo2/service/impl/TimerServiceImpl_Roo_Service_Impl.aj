// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.foo2.service.impl;

import com.foo2.domain.Timer;
import com.foo2.repository.TimerRepository;
import com.foo2.service.api.TimerService;
import com.foo2.service.impl.TimerServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TimerServiceImpl_Roo_Service_Impl {
    
    declare parents: TimerServiceImpl implements TimerService;
    
    declare @type: TimerServiceImpl: @Service;
    
    declare @type: TimerServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     */
    private TimerRepository TimerServiceImpl.timerRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param timerRepository
     */
    @Autowired
    public TimerServiceImpl.new(TimerRepository timerRepository) {
        this.timerRepository = timerRepository;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param timer
     */
    @Transactional
    public void TimerServiceImpl.delete(Timer timer) {
        timerRepository.delete(timer);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Timer> TimerServiceImpl.save(Iterable<Timer> entities) {
        return timerRepository.save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void TimerServiceImpl.delete(Iterable<Long> ids) {
        List<Timer> toDelete = timerRepository.findAll(ids);
        timerRepository.deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Timer
     */
    @Transactional
    public Timer TimerServiceImpl.save(Timer entity) {
        return timerRepository.save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Timer
     */
    public Timer TimerServiceImpl.findOne(Long id) {
        return timerRepository.findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Timer> TimerServiceImpl.findAll(Iterable<Long> ids) {
        return timerRepository.findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Timer> TimerServiceImpl.findAll() {
        return timerRepository.findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long TimerServiceImpl.count() {
        return timerRepository.count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Timer> TimerServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return timerRepository.findAll(globalSearch, pageable);
    }
    
}
